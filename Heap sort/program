#include <stdio.h>
#include <stdlib.h>
#include <time.h>
void swap(int *a, int *b) {
    int temp = *a;
    *a = *b;
    *b = temp;
}
void heap(int arr[], int n, int i) {
    int largest = i;
    int left = 2 * i + 1;
    int right = 2 * i + 2;
    if (left < n && arr[left] > arr[largest])
      largest = left;
    if (right < n && arr[right] > arr[largest])
      largest = right;
    if (largest != i) {
      swap(&arr[i], &arr[largest]);
      heap(arr, n, largest);
    }
}
void heapSort(int arr[], int n) {
    for (int i = n / 2 - 1; i >= 0; i--)
      heap(arr, n, i);
    for (int i = n - 1; i >= 0; i--) {
      swap(&arr[0], &arr[i]);
      heap(arr, i, 0);
    }
}
void printArray(int arr[], int n) {
    for (int i = 0; i < n; ++i)
      printf("%d ", arr[i]);
    printf("\n");
}
int main() {
    int n, i, j, temp,c;
    int arr[10];
    printf("Enter the number of elements to be sorted: \n");
    scanf("%d",&n);
    printf("Genrating random nos.:\n");
    srand(time(0));
    for (c = 0; c < n; c++){
    arr[c]=rand()%1000 +1;
    printf("%d\t\n",arr[c]);
    }
    clock_t begin = clock();
    heapSort(arr, n);
    printf("Sorted array is \n");
    printArray(arr, n);
    clock_t end = clock();
    double time_spent = (double)(end - begin) / CLOCKS_PER_SEC;
    printf("\n\nEXECUTION TIME : %.10fseconds\n", time_spent);
}
